// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dcpp_fib
int dcpp_fib(int n);
RcppExport SEXP _dcpp_dcpp_fib(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(dcpp_fib(n));
    return rcpp_result_gen;
END_RCPP
}
// dcpp_slope
double dcpp_slope(const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _dcpp_dcpp_slope(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dcpp_slope(x, y));
    return rcpp_result_gen;
END_RCPP
}
// dcpp_sum
double dcpp_sum(const std::vector<double>& r_vector);
RcppExport SEXP _dcpp_dcpp_sum(SEXP r_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type r_vector(r_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(dcpp_sum(r_vector));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dcpp_dcpp_fib", (DL_FUNC) &_dcpp_dcpp_fib, 1},
    {"_dcpp_dcpp_slope", (DL_FUNC) &_dcpp_dcpp_slope, 2},
    {"_dcpp_dcpp_sum", (DL_FUNC) &_dcpp_dcpp_sum, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_dcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
